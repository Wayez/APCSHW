public class OrderedSuperArray extends SuperArray{
    public OrderedSuperArray(){
	super(10);
    }
    public OrderedSuperArray(int length){
	super(length);
    }
    public void add(int index, String e){
	System.out.println("No need to specify index for ordered superarray. Adding and sorting "+ e);
	add(e);
    }
    public void InsertionSort(){
	for (int x=1; x<size(); x++){
	    //System.out.println(A[x].compareTo(A[x-1]));
	    if (A[x].compareTo(A[x-1])<0){
		for (int y=1; y<=x; y++){
		    //System.out.println(A[x].compareTo(A[x-1]));
		    if (A[x].compareTo(A[x-y])>=0){
			String temp=A[x];
			remove(x);
			System.out.println(x);
			System.out.println(y);
			System.out.println(x-y);
			super.add(x-y, temp);
			break;
		    } else if (x-y==1){
			super.add(0, remove(x));
			break;
		    }
		}
	    }
	}
	//System.out.println(size());
    }
	    
					
	    
    public void add(String e){
	System.out.println("Adding and sorting " + e + " into ordered superarray");
	int index = size();
        while( index >0 && get(index-1).compareTo(e) > 0 ){
            index--;
        }
	System.out.println(index);
	super.add(0, e);
        super.add(index, e);
    }
	    
	//System.out.println(size());
	//order(e);
    public void order(String e){
	System.out.println(size());
	for (int i=0; i<size(); i++){
	    if (e.compareTo(get(i))<=0){
		super.add(i, e);
		break;
	    }
	}
	remove(size());
    }
    public String set(int index, String e){
	System.out.println("New set method will add " + e + " to ordered superarray and remove the string in index " + index);
	if (index<0){
	    System.out.println( "Error: Index cannot be less than 0");
	    return null;
	} else if(index>=size){
	    System.out.println( "Error: Index cannot be greater than or equal to size");
	    return null;
       } else {
	    String x=A[index];
	    remove(index);
	    add(e);
	    return x;
	}
    }
	
}

	    
